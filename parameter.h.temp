#ifndef __PARAMETER_H_
#define __PARAMETER_H_

#include "define.h"

//#######################################
//### Raspberry 7" Display ###
#define GUI                         1         //Wichtig!    // Wenn die RSCP-Applikation ohne Display genutzt werden soll 0, wenn das Display genutzt wird 1
#define framebuffer_File            "/dev/fb0"              //Wichtig wenn GUI=1!    // Datei in der die Parameter zum Display gespeichert werden Speicherort abfragen "ls /dev/" meistens "fb0"
#define touch_File                  "/dev/input/event0"     //Wichtig wenn GUI=1!    // Datei in der die Parameter zur Touchfunktion gespeichert werden Speicherort abfragen "ls /dev/input/" meistens "event0" kann aber variieren wenn Tastatur / Maus angeschschlossen sind. Auslesen der Datei mit: "udevadm info --name=/dev/input/eventX --attribute-walk" X ersetzen mit 0...7 etc.

//#######################################
//### E3DC S10 Einstellungen ###
#define E3DC_S10                    1         //Wichtig!    // Ist ein E3DC Speicher vorhanden dann 1, soll das display nur für Homematic genutzt werden dann 0
#define RSCP_DETAILED_OUTPUT        false                   // Detallierte Ausgabe = true / Minimal = false
#define SleepTime                   1                       // Abfrageintervall für die RSCP-Applikation in Sekunden, wenn "GUI = 1 & E3DC_S10 = 1" ist der Intervall automatisch = 1
// S10 Einstellungen wie IP-Adresse, Benutzername, Passwort und RSCP-Schlüssel
#define SERVER_IP                   "192.168.178.xxx"       // IP-Adresse vom S10
#define E3DC_USER                   "Max.Mustermann"        // Benutzername vom E3DC Portal
#define E3DC_PASS                   "password"              // Passwort vom E3DC Portal
#define AES_PASS                    "1234567890"            // RSCP-Schlüssel wie am Display vom S10 eingestellt
//#######################################
//### Homematic Einstellungen für RSCP-Applikation ###
#define Homematic_E3DC              0         //Wichtig!    // Sollen die Daten zur Homematic gesendet werden? Daten senden 1 eintragen sonst 0
#define HM_IP                       "192.168.178.yyy"       // IP-Adresse von der Homematic
#define HM_Intervall                30                      // Sendeintervall der E3DC Daten zur Homematic und Abfrageintevall für Display
#define HM_XML_TOKEN                "aaAAbbBBccCC"          // HM XML-API Token HM > Einstellungen > Systemsteuerung > Zusatzsoftware > XML-API > Einstellungen
                                                            // mit tokenregister.cgi einen Token generieren
                                                            // mit tokenlist.cgi den erstellten Token ausgeben und hier statt "aaAAbbBBccCC" hinterlegen
// ISE-ID der diversen Systemvariablen
#define TAG_EMS_ISE_POWER_PV        0                // ISE_ID_POWER_PV
#define TAG_EMS_ISE_POWER_BAT       0                // ISE_ID_POWER_BAT
#define TAG_EMS_ISE_POWER_HOME      0                // ISE_ID_POWER_HOME
#define TAG_EMS_ISE_POWER_GRID      0                // ISE_ID_POWER_GRID
        // Die Homematic kann keine negativen Werte nicht so gut auswerten somit wird NetIn und NetOut eine Option.
#define TAG_EMS_ISE_POWER_NET_IN    0                // ISE_ID_POWER_NET_IN
#define TAG_EMS_ISE_POWER_NET_OUT   0                // ISE_ID_POWER_NET_OUT
#define TAG_BAT_ISE_SOC             0                // ISE_ID_SOC
#define TAG_EMS_ISE_UNIXTIME        0                // ISE_ID_UNIXTIME
#define sendTime                    0                       // Wenn der Zeitstempel gesendet werden soll =1; wenn die HM diesen Berechnen soll =0
#define ISE_TIMESTAMP_HM            0                // ISE_ID_TIMESTAMP_HM
#define PM_POSITION                 0                // nur 0 oder 6 möglich > Der Leistungsmesser hat unterschiedliche Adressen wenn er intern oder extern verbaut ist, bei Fehlermeldung in der Ausgabe "Tag 0x05860000 received error code 6" ggf. andere Nummer testen.
//Wenn vorhandene Bitte für Additional (Externe-Quelle) ein 1, sonst 0 eintragen.
#define Additional                  0
#define TAG_EMS_ISE_POWER_ADD       0                // ISE_ID_POWER_ADD
//Wenn vorhandene Bitte für die Wallbox ein 1, sonst 0 eintragen.
#define Wallbox                     0
#define TAG_EMS_ISE_POWER_WB_ALL    0                // ISE_ID_POWER_WB_ALL
#define TAG_EMS_ISE_POWER_WB_SOLAR  0                // ISE_ID_POWER_WB_SOLAR
#define TAG_EMS_ISE_POWER_WB_GRID   0                // ISE_ID_POWER_WB_GRID
#define TAG_EMS_ISE_WB_CURRENT      0                // ISE_ID Maximaler Ladestrom
#define TAG_EMS_ISE_WB_MODE         0                // ISE_ID Sonnenmodus / Mischmodus
#define TAG_EMS_ISE_WB_CHARGE       0                // ISE_ID Auto lädt / Auto lädt nicht
#define TAG_EMS_ISE_WB_LOCKED       0                // ISE_ID verriegelt / nicht verriegelt
#define TAG_EMS_ISE_WB_CONNECT      0                // ISE_ID Typ2 gesteckt / Typ2 nicht gesteckt
#define TAG_EMS_ISE_WB_PHASES       0                // ISE_ID Anzahl der Phasen
#define TAG_EMS_ISE_WB_BBC          0                // ISE_ID Batterie vor Auto (Priorität)
#define TAG_EMS_ISE_WB_BTC          0                // ISE_ID Batterie nach Auto (Batteriestrom erlauben)
//Wallbox Werte lesen und senden
#define WALLBOX_ACTION              0                // Mit dieser Funktion (aktiv = 1 / deaktiv = 0) wird eine Variable der HM überwacht, wenn diese "true" ist werden weitere Variablen ausgelesen und die Werte zur Wallbox gesendet
#define ISE_WB_SEND_NOW             0                // ISE_ID Anforderung fürs senden
#define ISE_WB_SEND_CURRENT         0                // ISE_ID Maximaler Ladestrom
#define ISE_WB_SEND_MODE            0                // ISE_ID Sonnenmodus / Mischmodus
#define ISE_WB_SEND_BTC             0                // ISE_ID Batterie vor Auto (Priorität)
#define ISE_WB_SEND_BBC             0                // ISE_ID Batterie nach Auto (Batteriestrom erlauben)
#define ISE_WB_SEND_STOP            0                // ISE_ID zum stoppen der Ladung
#define ISE_WB_SEND_PH_CHANGE       0                // ISE_ID Anzahl der Phasen tauschen
//Soll Seriennummer, Autarky und Eigenstrom auch zur Homematic gesendet werden
// Ja = 1, Nien = 0, Wenn Ja bitte ISE_ID eingeben
#define Seriennummer                0
#define Autarky                     0
#define Eigenstrom                  0
#define TAG_EMS_ISE_SERIAL_NUMBER   0                // ISE_ID_SERIAL_NUMBER
#define TAG_EMS_ISE_SW_RELEASE      0                // ISE_ID_SW_RELEASE
#define TAG_EMS_ISE_AUTARKY         0                // ISE_ID_AUTARKY
#define TAG_EMS_ISE_SELFCON         0                // ISE_ID_SELFCON
//Wieviele Tracker am Wechselrichter sind belegt, 1 oder 2
#define PVI_TRACKER                 2
//Welche Werte sollen vom Tracker/ von den Trackern abgefragt werden
#define TRACKER_POWER               1
#define TAG_EMS_ISE_TRACKER_1       0                // ISE_ID_TRACKER_1
#define TAG_EMS_ISE_TRACKER_2       0                // ISE_ID_TRACKER_2
#define TRACKER_VOLTAGE             1
#define TRACKER_CURRENT             1
//Abfragen der History Values
#define historyAktiv                1                       //History Values Abfragen und Anzeigen aktiv=1 deaktiv=0
#define historyDelay                900                     //Abfrageintervall in Sekunden mindestens 60, Empfehlung 900
// Notstromreserve Senden und Abfragen
#define EP_RESERVE_ACTION           0                // Mit dieser Funktion (aktiv = 1 / deaktiv = 0) wird eine Variable der HM überwacht, wenn diese "true" ist werden weitere Variablen ausgelesen und die Werte der EP-Reserve gesendet
#define TAG_SE_ISE_EP_RESERVE_W     0                // ISE_ID Notstromreserve IST-Wert
#define ISE_EP_RESERVE_SEND_NOW     0                // ISE_ID Anforderung fürs senden
#define ISE_EP_RESERVE_SET_W        0                // ISE_ID Notstromreserve SOLL-Wert
//Installallierte Leistung und Reduction
#define ISE_INSTALLED_PEAK_POWER    0
#define ISE_DERATE_AT_PERCENT       0
#define ISE_DERATE_AT_POWER         0
//Verschiedenes
#define ISE_EMS_STATUS              0
#define ISE_EP_STATUS               0
#define ISE_EMERGENCY_POWER_STATUS_INFO          0
#define ISE_INFO_PRODUCTION_DATE    0
#define ISE_BAT_CHARGE_CYCLES       0
#define ISE_BAT_DCB_COUNT           0
#define ISE_BAT_TRAINING_MODE       0
#define ISE_BAT_TRAINING_MODE_INFO  0
#define ISE_BAT_DEVICE_NAME         0
//batterylimits (im TAG enthalten)
#define ISE_BAT_POWER_LIMITS_USED                0
#define ISE_BAT_CHARGE_LIMIT                     0
#define ISE_BAT_DISCHARGE_LIMIT                  0
#define ISE_BAT_DISCHARGE_START_POWER            0
#define ISE_POWERSAVE_ENABLED                    0
#define ISE_WEATHER_REGULATED_CHARGE_ENABLED     0
//batterylimits action
#define BATTERYLIMIT_ACTION         0                // Mit dieser Funktion (aktiv = 1 / deaktiv = 0) wird eine Variable der HM überwacht, wenn diese "true" ist werden weitere Variablen ausgelesen und die Werte der Batterielimits gesendet
#define ISE_BL_SEND_NOW             0                // ISE_HM Variable mit Befehl zum senden true=senden
#define ISE_BL_SEND_MODE            0                // ISE_HM Variable Mode für Natterie-Limits true=manuell (user) / false=auto
#define ISE_BL_SEND_CHARGE          0                // ISE_HM Variable Max. Ladeleistung in kW
#define ISE_BL_SEND_DISCHARGE       0                // ISE_HM Variable Max. Endladeleistung in kW
//powersave action
#define POWERSAVE_ACTION            0  //Aktuell noch keine Funktion nicht auf 1 setzen!
#define ISE_PS_SEND_NOW             0
#define ISE_PS_SEND_MODE            0
//weather regulated power action
#define WEATHER_REG_ACTION          0  //Aktuell noch keine Funktion nicht auf 1 setzen!
#define ISE_WR_SEND_NOW             0
#define ISE_WR_SEND_MODE            0
// MyPV
#define MYPV_USE                    1                // MyPV verbaut (Ja/aktiv = 1 / Nein/deaktiv = 0)
#define ISE_MYPV_POWER              83551
#define ISE_MYPV_TEMP               83552

//#######################################
// Homematic Parameter
#define Homematic_GUI               0         //Wichtig!    //Wenn das Display für Homematic genutzt werden soll 1 sonst 0
/*
Wenn das Display für HM Daten genutzt wird
aber die ISE_ID noch nicht angepasst sind,
wird es zu langen wartezeiten beim lesen der
Daten (read_HM) kommen. Damit diese Wartezeiten
unterbunden werden, alle ISE_ID au "0" setzen!
Es kann aber zu darstellungsfehler kommen.
*/
// !!! Wichtig >>> Weitere Parameter zur Homematic bitte in der "parameterHM.h" definieren

//#######################################
//### GuiMain Parameter ###
#define ScreenSaverTime             180                     // Zeit bis sich der Bilschirmschoner aktiviert (in Sekunden), -1 deaktiviert den Bildschirmschoner
//Einstellungen Langzeitanzeige (15 Minuten Mittelwerte in duchrlaufender 24 Stundenanzeige)
#define PowerMax                    5400                    // maximal zu erwartende Leistung als 15Min Mittelwert für Solarproduktion oder Hausverbrauch
#define BatMax                      3000                    // maximale Batterieleistung
#define skalaLine                   1000                    // Einteilung der Scala

//#######################################
//### Watchdog Einstellungen ###
//Zeitdifferenz zur aktuellen Zeit bis zur Watchdog aktivierung (in Sekunden)
#define WDdiff                      300                     // Minimalwert 240
//Zeitinterval für die Abfragen des Watchdog (in Sekunden)
#define sleepTimeWD                 120
//Anzahl Programm Neustarts bis zum Reboot
#define rebootCounter               4
//Nach dieser Zeit wird der rebootCounter zurückgesetzt wenn die Daten aktuell sind (in Minuten)
#define resetMin                    60
//WD für HM-Gui (nur wenn Unixtime und Timestamp als Variablen in der Homematic angelegt sind und abgefragt werden)
#define WDuseHM_Gui                 0
//Kontrolldatei aktivieren damit häufige Aktivitäten erkannt werden können
#define WDkontrolle                 0                       //1=aktiv / 0=deaktiv Empfehlung: 0=deaktiv
//Email senden bei aktivität
#define WDsendEmailReboot           0                       // 1= senden erlaubt (sendEmail installiert) 0=deaktiv
#define WDsendEmailKill             0                       // 1= senden erlaubt (sendEmail installiert) 0=deaktiv
#define WDtoEmailAdress             "max.mustermann@web.de"                     // Email Adresse für Watchdog aktivitäten
//Ping zum Router füre einen LAN/WLAN test
#define RouterIP                    "192.168.178.1"         // IP-Adresse vom Router
#define PingOn                      1                       // 1= Ping zu Router aktiv
#define resetWLAN                   1                       // 1= Reset für WLAN bei Pingfehler
#define PingWD                      1                       // 1= Reboot nach dem 3. Pingfehler
//Release Version überwachen und E-Mail Senden
#define WDsendEmailRelease          1                       //1=aktiv / 0=deaktiv
//#######################################
//Debug Option
#define debugUse                    0                       // Einige Debug-Zeilen sind schon eingefügt, aktiv=1 deaktiv=0

//#######################################
// sendEmail Parameter
#define FromEmailAdress             "max.mustermann@web.de"                     //eMail-Adresse von der gesendet wird
#define smtpServer                  "smtp.web.de"                               //eMail-Server zum senden
#define smtpPort                    "587"                                       //Port für den smtpServer
#define smtpTLS                     "yes"                                       //TSL-Verschlüsselung "yes" oder "no"
#define smtpBenutzer                "max.mustermann@web.de"                     //Benutzername für den eMail Account
#define smtpPass                    "1234abc"                                   //Passwort für den eMail Account

//#######################################
// Grünbeck
#define Gruenbeck                   0                       // 1= Es ist eine Grünbeck Enthätungsanlage vorhanden
#define GRUEN_IP                    "192.168.178.zzz"        // IP-Adresse der Grünbeck
#define GruenbeckHM                 0                       // 1= Daten der Grünbeck sollen zur HomeMatic gesendet werden, Einstellungen der ISE_ID in External/Gruenbeck.h

//#######################################
// Wetterdienst von OpenWeatherMap
#define wetterGui                   1
//#define WEATHER_ID                  2950159
#define WEATHER_COUNTRY             "Deutschland"
#define WEATHER_CITY                "Berlin"
#define WEATHER_LAT                 "52.520855"
#define WEATHER_LON                 "13.409389"
#define WEATHER_KEY                 "12345678910111213141516171819202"   //https://openweathermap.org API Key (Kostenlos 10.000 Abfragen per Monat)

//#######################################
// Abfuhrkalender
#define Abfuhrkalender              1                       // 1= Abfuhrkalender aktiv, bearbeiten von Data/Entsorgung_JAHR.txt nötig 0=deaktiv
#define MuellLegende                1                       // 1= Legende einblenden 0=ausblenden

//#######################################
// PIR Modul für automatisches Beenden des Bildschirmschoners
// Aktivierung über Display
#define PirPin                      4                       // wiringPi Pin Nummer vom GPIO
// Wenn das Display z.B. immer dann eingeschaltet sein soll, wenn genügend Überschuss vorhanden ist, kannst du ohne PIR-Senor und ohne Aktor bei PIR und bei einem Schaltaktor die gleiche Pin-Nr vergeben, dann wird das Display beim erreichen der Bedingung aktiviert.

//#######################################
//Schaltaktoren
#define useAktor                    1                       // Schaltaktoren verwenden =1 / deaktiv=0
// Information zum Typ: Aktor  deaktiv=0 / Überschuss=1 / Solarproduktion=2 / Batterieaktor=3 /
//   Zeitfenster aktivieren +10 / Zeitaktor=10 / Überschuss=11 / Solarproduktion=12 / Batterieaktor=13 /
#define Aktor1Typ                   10                      // s.o.
#define Aktor1Prio                  0                       // Priorität von 1 bis 5  ohne Priorität 0
#define Aktor1Name                  "Heizstab"              // Bezeichnung
#define Aktor1PowerOn               1500                    // Überschussleistung oder Solarproduktion in Watt
#define Aktor1PowerOff              300                     // Abschaltwert nur bei Solarproduktion in Watt
#define Aktor1PercentOn             90                      // Einschaltschwelle in % für den Batterieaktor bei "Aktor1Typ = 3"
#define Aktor1PercentOff            10                      // Ausschaltschwelle in % für den Batterieaktor bei "Aktor1Typ = 3"
#define Aktor1TimerOn               "10:15"                 // Beginn Zeitfenster für ein Einschalten
#define Aktor1TimerOff              "12:00"                 // Ausschalten (AktorMinOn hat Vorrang)
#define Aktor1MinOn                 2                       // Mindest Einschaltdauer bevor abgeschaltet wird in Minuten z.B. für Waschmaschine
#define Aktor1MinOff                2                       // Mindest Ausschaltdauer bevor wieder eingeschaltet wird in Minuten
#define Aktor1Pin                   21                      // wiringPi Pin Nummer vom GPIO

#define Aktor2Typ                   12                       // s.o.
#define Aktor2Prio                  1                       // Priorität von 1 bis 5  ohne Priorität 0
#define Aktor2Name                  "Gartenbew\204sserung"  // Bezeichnung
#define Aktor2PowerOn               750                     // Überschussleistung in Watt
#define Aktor2PowerOff              300                     // Abschaltwert nur bei Solarproduktion in Watt
#define Aktor2PercentOn             0                       // Einschaltschwelle in % für den Batterieaktor bei "Aktor2Typ = 3"
#define Aktor2PercentOff            0                       // Ausschaltschwelle in % für den Batterieaktor bei "Aktor2Typ = 3"
#define Aktor2TimerOn               "08:00"                 // Beginn Zeitfenster für ein Einschalten
#define Aktor2TimerOff              "17:30"                 // Ausschalten (AktorMinOn hat Vorrang)
#define Aktor2MinOn                 60                      // Mindest Einschaltdauer bevor abgeschaltet wird in Minuten z.B. für Waschmaschine
#define Aktor2MinOff                360                     // Mindest Ausschaltdauer bevor wieder eingeschaltet wird in Minuten
#define Aktor2Pin                   22                      // wiringPi Pin Nummer vom GPIO

#define Aktor3Typ                   3                       // s.o.
#define Aktor3Prio                  2                       // Priorität von 1 bis 5  ohne Priorität 0
#define Aktor3Name                  "Batterie-Aktor"        // Bezeichnung
#define Aktor3PowerOn               750                     // Überschussleistung in Watt
#define Aktor3PowerOff              300                     // Abschaltwert nur bei Solarproduktion in Watt
#define Aktor3PercentOn             50                      // Einschaltschwelle in % für den Batterieaktor bei "Aktor3Typ = 3"
#define Aktor3PercentOff            35                      // Ausschaltschwelle in % für den Batterieaktor bei "Aktor3Typ = 3"
#define Aktor3TimerOn               "12:00"                 // Beginn Zeitfenster für ein Einschalten
#define Aktor3TimerOff              "20:00"                 // Ausschalten (AktorMinOn hat Vorrang)
#define Aktor3MinOn                 10                      // Mindest Einschaltdauer bevor abgeschaltet wird in Minuten z.B. für Waschmaschine
#define Aktor3MinOff                10                      // Mindest Ausschaltdauer bevor wieder eingeschaltet wird in Minuten
#define Aktor3Pin                   23                      // wiringPi Pin Nummer vom GPIO

#define Aktor4Typ                   2                       // s.o.
#define Aktor4Prio                  3                       // Priorität von 1 bis 5  ohne Priorität 0
#define Aktor4Name                  "Gartenbew\204sserung"  // Bezeichnung
#define Aktor4PowerOn               1250                    // Überschussleistung in Watt
#define Aktor4PowerOff              30                      // Abschaltwert nur bei Solarproduktion in Watt
#define Aktor4PercentOn             75                      // Einschaltschwelle in % für den Batterieaktor bei "Aktor4Typ = 3"
#define Aktor4PercentOff            25                      // Ausschaltschwelle in % für den Batterieaktor bei "Aktor4Typ = 3"
#define Aktor4TimerOn               "00:00"                 // Beginn Zeitfenster für ein Einschalten
#define Aktor4TimerOff              "00:00"                 // Ausschalten (AktorMinOn hat Vorrang)
#define Aktor4MinOn                 0                       // Mindest Einschaltdauer bevor abgeschaltet wird in Minuten z.B. für Waschmaschine
#define Aktor4MinOff                0                       // Mindest Ausschaltdauer bevor wieder eingeschaltet wird in Minuten
#define Aktor4Pin                   24                      // wiringPi Pin Nummer vom GPIO

#define Aktor5Typ                   0                       // s.o.
#define Aktor5Prio                  4                       // Priorität von 1 bis 5  ohne Priorität 0
#define Aktor5Name                  "Gartenbew\204sserung"  // Bezeichnung
#define Aktor5PowerOn               750                     // Überschussleistung in Watt
#define Aktor5PowerOff              300                     // Abschaltwert nur bei Solarproduktion in Watt
#define Aktor5PercentOn             75                      // Einschaltschwelle in % für den Batterieaktor bei "Aktor5Typ = 3"
#define Aktor5PercentOff            25                      // Ausschaltschwelle in % für den Batterieaktor bei "Aktor5Typ = 3"
#define Aktor5TimerOn               "22:15"                 // Beginn Zeitfenster für ein Einschalten
#define Aktor5TimerOff              "22:30"                 // Ausschalten (AktorMinOn hat Vorrang)
#define Aktor5MinOn                 10                      // Mindest Einschaltdauer bevor abgeschaltet wird in Minuten z.B. für Waschmaschine
#define Aktor5MinOff                2                       // Mindest Ausschaltdauer bevor wieder eingeschaltet wird in Minuten
#define Aktor5Pin                   25                      // wiringPi Pin Nummer vom GPIO

//Umlaute \204=ä \216=Ä \224=ö \231=Ö \201=ü \232=Ü \341=ß

//#######################################
//Temperatur und Luftfeuchtesensoren
#define useDHT                      1                       // DHT11 verwenden =1 / deaktiv=0
#define DHT1Use                     1                       // DHT 1 deaktiv=0 / aktiv=1
#define DHT1Name                    "Flur"                  // Bezeichnung
#define DHT1Pin                     7                       // wiringPi Pin Nummer vom GPIO
#define DHT1_OFFSET_TEMP            0.0                     // Offset Temperatur

#define DHT2Use                     0                       // DHT 2 deaktiv=0 / aktiv=1
#define DHT2Name                    "K\201che"              // Bezeichnung
#define DHT2Pin                     0                       // wiringPi Pin Nummer vom GPIO
#define DHT2_OFFSET_TEMP            0.0                     // Offset Temperatur

#define DHT3Use                     0                       // DHT 3 deaktiv=0 / aktiv=1
#define DHT3Name                    "Wohnzimmer"            // Bezeichnung
#define DHT3Pin                     1                       // wiringPi Pin Nummer vom GPIO
#define DHT3_OFFSET_TEMP            0.0                     // Offset Temperatur

#define DHT4Use                     0                       // DHT 4 deaktiv=0 / aktiv=1
#define DHT4Name                    "Flur"                  // Bezeichnung
#define DHT4Pin                     2                       // wiringPi Pin Nummer vom GPIO
#define DHT4_OFFSET_TEMP            0.0                     // Offset Temperatur

#define DHT5Use                     0                       // DHT 5 deaktiv=0 / aktiv=1
#define DHT5Name                    "Flur"                  // Bezeichnung
#define DHT5Pin                     3                       // wiringPi Pin Nummer vom GPIO
#define DHT5_OFFSET_TEMP            0.0                     // Offset Temperatur

//#######################################
// Status-LED's für E3DC Informationen
#define E3DC_LED                    0                       // 1= LED's aktiv, bearbeiten der Parameter External/LedMain.c und git clone https://github.com/jgarff/rpi_ws281x.git nötig 0=deaktiv

//#######################################

#endif // __PARAMETER_H_
